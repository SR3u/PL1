EX08:	PROC  OPTIONS  ( MAIN );
		DCL	A	BIN    FIXED  INIT  ( 3 );
		DCL	B	DEC  FIXED  INIT  ( 3 );		По умолчанию на десятичное число в PL1 выделяется 3 байта
		DCL	C	BIN    FIXED;
		C = A = B;
	END  EX08;



EX08    START 0   Начало программы   

	BALR  RBASE,0       Загрузить регистр базы               
	USING *,RBASE       Назначить регистр базой   

	L R2,A		   		Загрузка переменной A в регистр  R2
	

						Конвертируем B в десятичный формат
						При вызове CVB переменная должна размещаться в 8 байтах, со сдвигом кратным 4
	MVC   @BUF + 5,B 	Записываем переменную B (3 байта) в правую часть 
						<подумать, как упростить и убрать сложение в метке>
	CVB   R3,BUF	    Загрузка переменной BUF в регистр R3, с переводом из десятичного в двоичный
				   	   
	
						Сравнение регистров R2 и R3, результат в регистре PSW
						

	MVC	  C,TRUE 			Записываем в C TRUE
	CR    R2,R3    
	BC    8,@L2  	Для чтения результата используем команду BC (branch condition) - переход к метке
							Если первый параметр 1111 (15) - переходим всегда
												 1000 (8)  - переходим, если не равны 	
												 0000 (0)  - переходим никогда 

@L1:
	BCR   15,14        Выход из программы


@L2:					Метка перехода по условию
						Если не равно,
	MVC	 C,FALSE		Записываем в C FALSE
	BC 15,@L1			Возвращаемся в основную ветку (переходим всегда)




	Объявления переменных


	@TRUE	 DC    F'1'			Константа TRUE	
	@FALSE	 DC    F'0'			Константа FALSE	



	A        DC    F'3'         Определение переменной
	B        DC    DL3'3'       Определение десятичной переменной <посмотреть, какая метка для десятичного числа. D?>
	C        DC    F'0'         Определение переменной

			 DS	   0F			Резервируем кратность на 4	
	@BUF 	DC DL8'0'		Буфер на 8 байтов с нулями для передачи переменной B на операцию CVB. 
							Константа, чтобы было удобней записать переменную B


	RBASE    EQU   15
	R2     EQU   2			Объявление рабочего регистра
	R3	   EQU	 3			Объявление рабочего регистра

END    EX08       Конец программы
